tosca_definitions_version: tosca_simple_yaml_1_0 # Required TOSCA Definitions version string
tosca_default_namespace: http://types.opentosca.org # Optional. default namespace (schema, types version) 
template_name: InstallVMServTemplate # Optional name of this service template

description: Service Template for installing VMServ # ToDo: Check wether this is neccessary

# list of import statements for importing other definitions files 
imports: 
	- ns5__OperatingSystem.yaml #ToDo: Convert these XML files to YAML, check relative path
	- ns75__InstallOpenStackVM.yaml #ToDo: Convert these XML files to YAML, check relative path
#These are the inputs from plan, check if names can be the same as in properties
inputs:
	minRAM:
		type: string
		description: Number of RAM
	credentials:
		type: string
		description: credentials
	endpointsAPI:
		type: string
		description: endpointsAPI
	flavorId:
		type: string
		description: flavorId	
	keypair:
		type: string
		description: keypair
	imageId:
		type: string
		description: imageId	
	imageName:
		type: string
		description: Name of image
	minDisk:
		type: string
		description: Number disks	
	
# ToDo: Describe NodeTypes
node_templates:
	InstallOpenStackVMTemplate:
		type: InstallOpenStackVM
		properties:
            credentials: {"auth":{"tenantId":"4114e1b404404565ac2ccbcc76b8078e","passwordCredentials":{"username":"marzie.dehghanipour","password":"piorkaun"}}}
            endpointsAPI: {"os-identity-api":"http:\/\/129.69.209.127:5000\/v2.0","os-tenantId":"4114e1b404404565ac2ccbcc76b8078e"}
            keypair: {get_input:keypair} #ToDo: What if there is no value
            minDisk: {get_input:minDisk}
            minRAM: {get_input:minRAM}
            flavorId: 3
            imageId: {get_input:imageId}
            imageName: ubuntu-12.04-server-cloudimg-amd64 # or {get_input:imageName}
            floatingIp:
            serverId:
            privKey>:
		
	LinuxOperatingSystem:
		type: OperatingSystem
		properties:
			hostname: #ToDo: What if there is no value?
            sshUser: ubuntu
            sshKey:
            script: uname -a
		constraints:
			- minInstances: 1
			- maxInstances: 1

outputs:
	selfserviceApplicationUrl:	
		description:
		value:
    selfserviceMessage:
		description:
		value:
    selfservicePolicyMessage:
		description:
		value:
    selfserviceStatus:
		description:
		value:
    CorrelationID:
		description:
		value: